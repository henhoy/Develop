IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.ROUTINES WHERE ROUTINE_NAME = 'xe_code_generator')
	DROP FUNCTION xe_code_generator
GO

/*************************************************
Extended Events Code Generator v1.001 (2010-05-08)
(C) 2009-2010 Adam Machanic

Feedback: mailto:amachanic@gmail.com
Updates: http://sqlblog.com/blogs/adam_machanic

See below for optional SQLCLR create script to
enhance performance of the resultant code when
using the asynchronous_file_target.
*************************************************/
CREATE FUNCTION xe_code_generator
(
	@session_name VARCHAR(200),
	@target_name VARCHAR(200)
)
RETURNS XML
AS
BEGIN
	DECLARE @crlf CHAR(2) = CHAR(13) + CHAR(10);
	DECLARE @use_clr_helper BIT = 
		CASE 
			WHEN 
				@target_name = 'asynchronous_file_target'
				AND EXISTS (SELECT * FROM sys.objects WHERE name = 'xe_event_reader' AND type = 'FT') 
					THEN 1
			ELSE 0
		END;

	RETURN
	(
		SELECT
			'--' + @crlf + 
			'DECLARE ' + @crlf +
			CASE @target_name
				WHEN 'ring_buffer' THEN
					'	@session_name VARCHAR(200) = ''' + @session_name + '''' + @crlf
				WHEN 'asynchronous_file_target' THEN
				(
					SELECT
						'	@path NVARCHAR(260) = ''' + o.file_full_path + '*' + o.file_extension + ''', ' + @crlf +
						'	@mdpath NVARCHAR(260) = ''' + o.metadata_full_path + '*' + o.metadata_extension + ''', ' + @crlf +
						'	@initial_file_name NVARCHAR(260) = NULL, ' + @crlf +
						'	@initial_offset BIGINT = NULL ' + @crlf
					FROM 
					(
						SELECT
							file_full_path,
							file_extension,
							COALESCE(metadata_full_path, file_full_path) AS metadata_full_path,
							COALESCE(metadata_extension, '.xem') AS metadata_extension
						FROM
						(
							SELECT
								MIN
								(
									CASE
										WHEN name = 'filename' THEN file_full_path
										ELSE NULL
									END
								) AS file_full_path,
								MIN
								(
									CASE
										WHEN name = 'filename' THEN file_extension
										ELSE NULL
									END
								) AS file_extension,
								MIN
								(
									CASE
										WHEN name = 'metadatafile' THEN file_full_path
										ELSE NULL
									END
								) AS metadata_full_path,
								MIN
								(
									CASE
										WHEN name = 'metadatafile' THEN file_extension
										ELSE NULL
									END
								) AS metadata_extension
							FROM
							(
								SELECT
									name,
									path_to_file +
										COALESCE
										(
											first_chunk,
											second_chunk
										) AS file_full_path,
									COALESCE
									(
										'.' + 
											NULLIF
											(
												second_chunk, 	
												COALESCE
												(
													first_chunk,
													second_chunk
												)
											), 
										''
									) AS file_extension
								FROM
								(
									SELECT
										name,
										LEFT(filepath, LEN(filepath) - file_starting_point) AS path_to_file,
										PARSENAME(RIGHT(filepath, file_starting_point), 2) AS first_chunk,
										PARSENAME(RIGHT(filepath, file_starting_point), 1) AS second_chunk
									FROM
									(
										SELECT 
											f.name,
											CONVERT(VARCHAR(128), f.value) AS filepath,
											CHARINDEX('\', REVERSE(CONVERT(VARCHAR(128), f.value))) - 1 AS file_starting_point
										FROM sys.server_event_session_targets t 
										JOIN sys.server_event_session_fields f ON
											t.event_session_id = f.event_session_id
											AND t.name = 'asynchronous_file_target'
											AND f.name IN ('filename', 'metadatafile')
										JOIN sys.server_event_sessions s ON
											s.event_session_id = t.event_session_id
											AND s.name = @session_name
									) n
								) m
							) p
						) q
					) o
				)
				ELSE NULL
			END + @crlf + 
			'SELECT ' + @crlf + 
			'	pivoted_data.* ' + @crlf + 
			'FROM ' + @crlf + 
			'( ' + @crlf + 			
			'	SELECT ' + @crlf + 
			'		MIN(event_name) as event_name, ' + @crlf + 
			'		MIN(event_timestamp) as event_timestamp, ' + @crlf + 
				CASE
					WHEN
						EXISTS
						(
							SELECT *
							FROM sys.dm_xe_sessions s
							WHERE
								s.name = @session_name
								AND s.flag_desc like '%causality%'
						)
						THEN
						'		CONVERT(UNIQUEIDENTIFIER, MIN(LEFT(attach_activity_id, 36))) AS activity_id, ' + @crlf + 
						'		CONVERT(INT, MIN(RIGHT(attach_activity_id, LEN(attach_activity_id) - 37))) AS activity_sequence, '
					ELSE 
						'		unique_event_id, ' 
				END + @crlf + 
				CASE
					WHEN @target_name = 'asynchronous_file_target' THEN
						'		MIN(file_name) AS file_name, ' + @crlf +
						'		MIN(file_offset) AS file_offset, ' + @crlf
					ELSE ''
				END +
				STUFF(c.value('.[1]', 'varchar(max)'), LEN(c.value('.[1]', 'varchar(max)')) - 2, 3, '') + @crlf +
			'	FROM ' + @crlf + 
			'	( ' + @crlf + 
			'		SELECT ' + @crlf + 
			'			*' + 
						CASE
							WHEN
								EXISTS
								(
									SELECT *
									FROM sys.dm_xe_sessions s
									WHERE
										s.name = @session_name
										AND s.flag_desc like '%causality%'
								)
								AND @use_clr_helper = 0
								THEN
								', ' + @crlf +
								'			MIN ' + @crlf + 
								'			( ' + @crlf + 
								'				CASE ' + @crlf + 
								'					WHEN d_name = ''attach_activity_id'' THEN d_value ' + @crlf + 
								'					ELSE NULL ' + @crlf + 
								'				END ' + @crlf + 
								'			) OVER (PARTITION BY unique_event_id) AS attach_activity_id ' + @crlf
							WHEN @use_clr_helper = 1 THEN @crlf
							ELSE
								', ' + @crlf +
								'			CONVERT(VARCHAR(400), NULL) AS attach_activity_id ' + @crlf
						END + 
			'		FROM ' + @crlf + 
			'		( ' + @crlf +
			'			SELECT ' + @crlf + 
							CASE
								WHEN @target_name = 'asynchronous_file_target' THEN 
									'				the_xml.event_name, ' + @crlf + 
									'				the_xml.file_name, ' + @crlf +
									'				the_xml.file_offset, ' + @crlf +
									'				the_xml.unique_event_id, ' + @crlf +
									CASE 
										WHEN @use_clr_helper = 0 THEN
											'				the_xml.event_timestamp, ' + @crlf
										ELSE ''
									END
								ELSE 
									'				event.value(''(@name)[1]'', ''VARCHAR(400)'') as event_name, ' + @crlf + 
									'				event.value(''(@timestamp)[1]'', ''DATETIME'') as event_timestamp, ' + @crlf + 
									'				DENSE_RANK() OVER (ORDER BY event) AS unique_event_id, ' + @crlf
							END + 
				CASE 
					WHEN @use_clr_helper = 1 THEN
						'				event_timestamp, ' + @crlf + 
						'				data_name AS d_name, ' + @crlf +
						'				data_package AS d_package, ' + @crlf + 
						'				data_value AS d_value, ' + @crlf +
						'				data_text AS d_text, ' + @crlf +
						'				attach_activity_id ' + @crlf
					ELSE
						'				n.value(''(@name)[1]'', ''VARCHAR(400)'') AS d_name, ' + @crlf + 
						'				n.value(''(@package)[1]'', ''VARCHAR(400)'') AS d_package, ' + @crlf + 
						'				n.value(''((value)[1]/text())[1]'', ''VARCHAR(MAX)'') AS d_value, ' + @crlf + 
						'				n.value(''((text)[1]/text())[1]'', ''VARCHAR(MAX)'') AS d_text ' + @crlf
				END +
			'			FROM ' + @crlf + 
			'			( ' + @crlf + 
							CASE
								WHEN @target_name = 'ring_buffer' THEN
									'				SELECT ' + @crlf + 
									'					( ' + @crlf + 
									'						SELECT ' + @crlf + 
									'							CONVERT(xml, target_data) ' + @crlf + 
									'						FROM sys.dm_xe_session_targets st ' + @crlf + 
									'						JOIN sys.dm_xe_sessions s ON ' + @crlf + 
									'							s.address = st.event_session_address ' + @crlf + 
									'						WHERE ' + @crlf + 
									'							s.name = @session_name ' + @crlf +
									'							AND st.target_name = ''ring_buffer'' ' + @crlf + 
									'					) AS [x] ' + @crlf + 
									'				FOR XML PATH(''''), TYPE ' 
								WHEN @target_name = 'asynchronous_file_target' THEN
									'				SELECT ' + @crlf + 
									'					CONVERT(xml, event_data), ' + @crlf + 
									CASE 
										WHEN @use_clr_helper = 0 THEN
											'					CONVERT(xml, event_data).value(''(event/@timestamp)[1]'', ''DATETIME'') AS event_timestamp, ' + @crlf
										ELSE ''
									END +
									'					object_name, ' + @crlf +
									'					ROW_NUMBER() OVER (ORDER BY (SELECT 1)), ' + @crlf + 
									'					file_name, ' + @crlf +
									'					file_offset ' + @crlf +
									'				FROM sys.fn_xe_file_target_read_file (@path, @mdpath, @initial_file_name, @initial_offset) ' 
								--only ring_buffer and asynchronous_file_target currently supported
								ELSE NULL
							END + @crlf + 
			'			) AS the_xml(' + 
			CASE 
				WHEN @target_name <> 'asynchronous_file_target' THEN 'x' 
				ELSE 
					'event, ' + 
					CASE 
						WHEN @use_clr_helper = 0 THEN 'event_timestamp, ' 
						ELSE '' 
					END + 'event_name, unique_event_id, file_name, file_offset' 
			END + ') ' + @crlf + 
			CASE WHEN @target_name <> 'asynchronous_file_target' THEN '			CROSS APPLY x.nodes(''//event'') e (event) ' + @crlf ELSE '' END + 
			CASE 
				WHEN @use_clr_helper = 1 THEN
					'			CROSS APPLY xe_event_reader(event) AS q ' + @crlf
				ELSE
					'			CROSS APPLY event.nodes(''' + CASE WHEN @target_name <> 'asynchronous_file_target' THEN '*' ELSE 'event/*' END + ''') AS q (n) ' + @crlf
			END +
			'		) AS data_data ' + @crlf + 
			'	) AS activity_data ' + @crlf + 
			'	GROUP BY ' + @crlf + 
			'		unique_event_id ' + @crlf + 
			') AS pivoted_data; ' + @crlf + '--' AS [processing-instruction(query)]
		FROM
		(
			SELECT
				the_list as [text()]
			FROM
			(
				SELECT TOP(2147483647)
					'		CONVERT ' + @crlf + 
					'		( ' + @crlf + 
					'			' + 
								CASE column_type
									WHEN 'int8' THEN 'TINYINT'
									WHEN 'int16' THEN 'SMALLINT'
									WHEN 'int32' THEN 'INT'
									WHEN 'int64' THEN 'BIGINT'
									WHEN 'uint8' THEN 'SMALLINT'
									WHEN 'uint16' THEN 'INT'
									WHEN 'uint32' THEN 'BIGINT'
									WHEN 'uint64' THEN 'DECIMAL(28,0)'
									WHEN 'float32' THEN 'FLOAT(24)'
									WHEN 'float64' THEN 'FLOAT(53)'
									ELSE 
										CASE
											WHEN column_name = 'tsql_stack' THEN 'XML'
											ELSE 'VARCHAR(MAX)'
										END
								END + ', ' + @crlf +								
					'			MIN ' + @crlf + 
					'			( ' + @crlf + 
					'				CASE ' + @crlf + 
					'					WHEN ' + @crlf + 
					'						event_name = ''' + event_name + ''' and ' + @crlf + 
					'						d_name = ''' + column_name + ''' and ' + @crlf + 
					'						d_package IS ' + CASE WHEN object_type = 'action' THEN 'NOT ' ELSE '' END + 'NULL ' + @crlf + 
					'							THEN ' + 
											CASE
												WHEN object_type = 'map' THEN 'd_text'
												ELSE 'd_value' 
											END + @crlf + 
					'				END ' + @crlf + 
					'			) ' + @crlf + 
					'		) AS [' + event_name + '.' + column_name + '],' + @crlf
				FROM
				(
					SELECT
						se.name AS event_name,
						oc.name AS column_name,
						oc.type_name AS column_type,
						o.object_type
					FROM sys.server_event_session_events se
					JOIN sys.server_event_sessions s ON
						s.event_session_id = se.event_session_id
					JOIN sys.dm_xe_packages p ON
						p.name = se.package
					JOIN sys.dm_xe_object_columns oc ON 
						oc.object_package_guid = p.guid
						AND oc.object_name = se.name
					JOIN sys.dm_xe_objects o ON
						o.name = oc.type_name
						AND o.package_guid = oc.type_package_guid
						AND o.object_type IN ('type', 'map')
					WHERE 
						s.name = @session_name
						AND oc.column_type = 'data'
					
					UNION ALL
					
					SELECT 
						ea.event_name,
						ea.action_name AS column_name,
						'action' AS column_type,
						'action' AS object_type
					FROM sys.dm_xe_session_event_actions ea
					JOIN sys.dm_xe_sessions s ON
						s.address = ea.event_session_address
					WHERE 
						s.name = @session_name
				) event_data
				ORDER BY
					event_name,
					column_name
			) u (the_list)
			FOR XML PATH(''), TYPE
		) column_list (c)
		FOR XML PATH('')
	)
END
GO

IF EXISTS (SELECT * FROM sys.objects WHERE name = 'xe_event_reader')
	DROP FUNCTION xe_event_reader
GO

IF EXISTS (SELECT * FROM sys.assemblies WHERE name = 'xe_event_reader')
	DROP ASSEMBLY xe_event_reader
GO

CREATE ASSEMBLY xe_event_reader
FROM 
WITH PERMISSION_SET = SAFE
GO

CREATE FUNCTION xe_event_reader
(
	@x XML
)
RETURNS TABLE
(
	event_timestamp datetime, 
	data_name nvarchar(400), 
	data_package nvarchar(400), 
	data_value nvarchar(MAX), 
	data_text nvarchar(MAX), 
	attach_activity_id nvarchar(4000)
)
AS EXTERNAL NAME xe_event_reader.UserDefinedFunctions.xe_event_reader
GO